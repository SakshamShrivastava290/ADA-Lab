#include <stdio.h>

void fractionalKnapsack(int n, float capacity, float weight[], float profit[]) {
    float ratio[50], totalValue = 0.0, temp;
    int i, j;

    // Calculate profit/weight ratio
    for (i = 0; i < n; i++)
        ratio[i] = profit[i] / weight[i];

    // Sort items by ratio in descending order
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (ratio[i] < ratio[j]) {
                // Swap ratio
                temp = ratio[i]; ratio[i] = ratio[j]; ratio[j] = temp;
                // Swap weights
                temp = weight[i]; weight[i] = weight[j]; weight[j] = temp;
                // Swap profits
                temp = profit[i]; profit[i] = profit[j]; profit[j] = temp;
            }
        }
    }

    // Greedy filling
    for (i = 0; i < n; i++) {
        if (weight[i] <= capacity) {
            capacity -= weight[i];
            totalValue += profit[i];
        } else {
            totalValue += ratio[i] * capacity;
            break;
        }
    }

    printf("\nMaximum value in Knapsack = %.2f\n", totalValue);
}

int main() {
    int n, i;
    float weight[50], profit[50], capacity;

    printf("Enter number of items: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        printf("Enter weight and profit of item %d: ", i + 1);
        scanf("%f %f", &weight[i], &profit[i]);
    }

    printf("Enter capacity of knapsack: ");
    scanf("%f", &capacity);

    fractionalKnapsack(n, capacity, weight, profit);
    return 0;
}
